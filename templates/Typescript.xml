<templateSet group="Typescript">
  <template name="viewstyle" value="const $VARNAME$: ViewStyle = {&#10;  $CONTENT$&#10;}" description="Creates a ViewStyle constant variable" toReformat="false" toShortenFQNames="true">
    <variable name="VARNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONTENT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="typescriptReactFunctionalComponent" value="import React from 'react';&#10;&#10;interface $FILE_NAME$Props {&#10;    $TYPES$&#10;}&#10;&#10;const $FILE_NAME$ : React.FC&lt;$FILE_NAME$Props&gt; = ({ $PROPS$ }) =&gt; {&#10;    return (&#10;        &lt;div&gt;&#10;        &#10;        &lt;/div&gt;&#10;    );&#10;};&#10;&#10;export default $FILE_NAME$;&#10;" description="TypeScript React Functional Component" toReformat="false" toShortenFQNames="true">
    <variable name="FILE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TYPES" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PROPS" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="useSelector" value="const { $IMPORT$ } = useSelector(&#10;    (state: RootState) =&gt; state.$REDUCER_NAME$,&#10;  );" description="Typescript useSelector" toReformat="false" toShortenFQNames="true">
    <variable name="IMPORT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="REDUCER_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="slice" value="import { createSlice, PayloadAction } from '@reduxjs/toolkit';&#10;&#10;interface $FILE_NAME$SliceState {&#10;  $STATE$&#10;}&#10;&#10;const initialState : $FILE_NAME$SliceState = {&#10;  $INITIAL_STATE$&#10;}&#10;&#10;const $FILE_NAME$Slice = createSlice({&#10;  name: '$FILE_NAME$',&#10;  initialState,&#10;  reducers: {&#10;    someReducer(state, action: PayloadAction&lt;string&gt;) {}&#10;  },&#10;});&#10;&#10;export const { someReducer } = $FILE_NAME$Slice.actions;&#10;&#10;export default $FILE_NAME$Slice.reducer;" description="Typescript Redux Toolkit Slice" toReformat="false" toShortenFQNames="true">
    <variable name="FILE_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="STATE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="INITIAL_STATE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>